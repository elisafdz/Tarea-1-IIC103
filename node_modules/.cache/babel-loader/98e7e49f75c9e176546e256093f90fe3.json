{"ast":null,"code":"var _jsxFileName = \"/Users/elisafernandez/Desktop/tarea1final/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temporadas: [],\n      isLoaded: false,\n      bool_episodes: false,\n      episodes: [],\n      episodio: '',\n      bool_episodio: false,\n      personaje: '',\n      bool_personaje: false,\n      quotes_personaje: '',\n      value: '',\n      lista_personaje_state: [],\n      bool_buscado: false,\n      contenido: 10\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://tarea-1-breaking-bad.herokuapp.com/api/episodes', {\n      method: \"GET\"\n    }).then(res => res.json()).then(resultado_json => {\n      var temporada_bb = 0;\n      var temporada_bcs = 0;\n      var episodios_bb = [];\n      var episodios_bcs = []; //console.log(`${resultado_json.length}`);\n      //recorro todos los episodios obtenidos y separo por serie\n\n      for (let i = 0; i < resultado_json.length; i += 1) {\n        //si es que es de Breaking bad lo agrego al array de bb\n        if (resultado_json[i].series == 'Breaking Bad') {\n          episodios_bb.push(resultado_json[i]);\n        } //si es que no es de bb, lo agrego al array de bcs\n        else {\n            episodios_bcs.push(resultado_json[i]);\n          }\n      } //recorro los episodios de bb y encuentro cuantas temporadas hay\n\n\n      for (let i = 0; i < episodios_bb.length; i += 1) {\n        var temporadas_provisoria_bb = episodios_bb[i].season;\n\n        if (parseInt(temporadas_provisoria_bb) > parseInt(temporada_bb)) {\n          temporada_bb = temporadas_provisoria_bb;\n        }\n      } //recorro los episodios de bcs y encuentro cuantas temporadas hay\n\n\n      for (let i = 0; i < episodios_bcs.length; i += 1) {\n        var temporadas_provisoria_bcs = episodios_bcs[i].season;\n\n        if (parseInt(temporadas_provisoria_bcs) > parseInt(temporada_bcs)) {\n          temporada_bcs = temporadas_provisoria_bcs;\n        }\n      }\n\n      var temp_bb = [];\n      var temp_bcs = []; //construyo un array con las temporadas de breaking bad\n\n      for (let i = 1; i <= temporada_bb; i += 1) {\n        temp_bb.push(i);\n      } //construyo un array con las temporadas de better call saul\n\n\n      for (let i = 1; i <= temporada_bcs; i += 1) {\n        temp_bcs.push(i);\n      } //Construyo un array con todas las temporadas\n\n\n      var total_temporadas = [temp_bb, temp_bcs];\n      this.setState({\n        isLoaded: true,\n        temporadas: total_temporadas,\n        bool_buscado: false\n      });\n    });\n  }\n\n  clickHandler(valor) {\n    //primero distinguir por serie\n    //si es una temporada de Breaking Bad\n    if (valor[1] == 'BCS') {\n      //busco en las temporadas de BB\n      var serie = 'Better+Call+Saul';\n      var t = valor[0]; //TEMPORADA\n    } //si es una temporada de Better Call Saul\n    else {\n        var t = valor[0]; //TEMPORADA\n\n        var serie = 'Breaking+Bad'; //busco en las temporadas de Better Call Saul\n      }\n\n    fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/episodes?series=${serie}`, {\n      method: \"GET\"\n    }).then(res => res.json()).then(resultado_json => {\n      //defino un array vacio\n      var array_titulos = []; //recorro todos los episodios\n\n      for (let i = 0; i < resultado_json.length; i += 1) {\n        //reviso si corresponde a la temporada buscada\n        if (resultado_json[i].season == t) {\n          //guardo el titulo en mi array\n          var titulo = resultado_json[i];\n          array_titulos.push(titulo);\n        }\n      }\n\n      this.setState({\n        bool_episodes: true,\n        episodes: array_titulos,\n        bool_personaje: false,\n        bool_episodio: false,\n        bool_buscado: false\n      });\n    });\n  }\n\n  episodeClicked(valor) {\n    this.setState({\n      bool_episodio: true,\n      episodio: valor,\n      bool_episodes: false,\n      //aca hice un cambio (agregue la linea de abajo)\n      bool_personaje: false,\n      bool_buscado: false\n    });\n  }\n\n  characterClicked(valor) {\n    //console.log(\"aki estoy\")\n    //tengo que buscar toda la informacion sobre el personaje recibido en valor y mostrarla, las temporadas deben ser clickeables\n    var nombre = valor.split(\" \");\n    var string_listo = \"\";\n\n    for (let i = 0; i < nombre.length; i += 1) {\n      if (i != 0) {\n        var string_parcial = \"+\" + nombre[i];\n      } else {\n        var string_parcial = nombre[i];\n      }\n\n      string_listo = string_listo + string_parcial;\n    } //console.log(string_listo)\n\n\n    Promise.all([fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/characters?name=${string_listo}`, {\n      method: \"GET\"\n    }).then(res => res.json()), fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/quote?author=${string_listo}`, {\n      method: \"GET\"\n    }).then(res => res.json())]).then(([urlOneData, urlTwoData]) => {\n      this.setState({\n        bool_personaje: true,\n        bool_episodio: false,\n        bool_episodes: false,\n        personaje: urlOneData,\n        bool_buscado: false,\n        quotes_personaje: urlTwoData\n      });\n    });\n  }\n\n  searchHandler(valor) {\n    this.setState({\n      value: valor.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    //busco los personajes de 10 en 10 y voy iterando hasta que los tengo todos\n    var buscado = this.state.value; //variable que contiene el texto ingresado en la busqueda\n\n    var lista_personajes = [];\n\n    for (let i = 0; i < 10; i += 1) //mientras que las paginas tengan 10 elementos sigo buscando\n    {\n      console.log(\"akiii\"); //busco la primera pagina\n\n      fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/characters?limit=10&offset=${i * 10}`, {\n        method: \"GET\"\n      }).then(res => res.json()).then(resultado_json => {\n        if (resultado_json.length > 0) {\n          resultado_json.map(resultado => lista_personajes.push(resultado.name));\n        }\n\n        this.setState({\n          //ista_personaje_state: lista_personajes,\n          bool_buscado: true,\n          bool_episodes: false,\n          bool_episodio: false,\n          bool_personaje: false,\n          lista_personaje_state: lista_personajes\n        });\n      });\n    } //busco los nombres que contengan el input buscado\n\n    /*fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/characters?name=${buscado}`,\n    {\n      method: \"GET\"\n      \n    }).then(res => res.json())\n    .then(resultado_json=> {\n      //console.log(resultado_json)\n      var lista_personajes = []\n      resultado_json.map(personaje=> (lista_personajes.push(personaje.name)))\n      this.setState({\n        lista_personaje_state: lista_personajes,\n        bool_buscado: true,\n        bool_episodes: false,\n        bool_episodio: false,\n        bool_personaje: false\n      });\n      \n    })*/\n    //busco a todos los personajes de todas las series y dps entrego una lista con todos los que tienen el texto ingresado.\n\n\n    event.preventDefault();\n  }\n\n  render() {\n    var {\n      isLoaded,\n      temporadas,\n      bool_episodes,\n      episodes,\n      episodio,\n      bool_episodio,\n      bool_personaje,\n      personaje,\n      quotes_personaje,\n      lista_personaje_state,\n      bool_buscado\n    } = this.state; //si debo mostrar la informacion de un episodio\n\n    if (bool_buscado) {\n      return /*#__PURE__*/_jsxDEV(\"body\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"buscador\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              align: \"right\",\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Buscador\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.state.value,\n                  onChange: this.searchHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"inicio\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"titulo-inicio\",\n              children: \"Resultados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"episodios\",\n              children: lista_personaje_state.map(personaje => /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"btn-personaje\",\n                  onClick: this.characterClicked.bind(this, personaje),\n                  children: personaje\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 10\n      }, this);\n    } else {\n      if (bool_personaje) {\n        if (personaje[0].appearance.length == 0) {\n          personaje[0].appearance = [];\n        }\n\n        if (personaje[0].better_call_saul_appearance.length == 0) {\n          personaje[0].better_call_saul_appearance = [];\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"general\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"buscador\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              align: \"right\",\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Buscador\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.state.value,\n                  onChange: this.searchHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"inicio\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"titulo-inicio\",\n              children: personaje[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"imagen\",\n              src: personaje[0].img,\n              width: \"150\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Nickname: \", personaje[0].nickname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Actor: \", personaje[0].portrayed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Categor\\xEDa: \", personaje[0].category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Status: \", personaje[0].status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Roles:   \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), personaje[0].occupation.map(trabajos => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [trabajos, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Apariciones en Breaking Bad :\", personaje[0].appearance.map(aparicion => /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"boton_aparicion\",\n                onClick: this.clickHandler.bind(this, [aparicion, \"BB\"]),\n                children: [aparicion, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Apariciones en Better Call Saul:\", personaje[0].better_call_saul_appearance.map(aparicion => /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"boton_aparicion\",\n                onClick: this.clickHandler.bind(this, [aparicion, \"BCS\"]),\n                children: [aparicion, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Quotes:   \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), quotes_personaje.map(quotes => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [quotes.quote, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (bool_episodio) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"general\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"buscador\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              align: \"right\",\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Buscador\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.state.value,\n                  onChange: this.searchHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"inicio\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"titulo-inicio\",\n              children: episodio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"episodios\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Temporada: \", episodio.season]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Episodio: \", episodio.episode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Fecha de estreno: \", episodio.air_date.substr(0, 10)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Personajes:\", episodio.characters.map(personaje => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"btn-episode\",\n                    onClick: this.characterClicked.bind(this, personaje),\n                    children: personaje\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this);\n      } else {\n        //si debo mostrar los episodes\n        if (bool_episodes) {\n          //aca estoy mostrando los episodes\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"general\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"buscador\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                align: \"right\",\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Buscador\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: this.state.value,\n                    onChange: this.searchHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"inicio\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                id: \"titulo-inicio\",\n                children: \" Episodios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"episodios\",\n                children: episodes.map(episodio => /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    children: [episodio.episode, \". \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"btn-episode\",\n                    onClick: this.episodeClicked.bind(this, episodio),\n                    children: episodio.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 56\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this);\n        } //si debo mostrar las temporadas\n        else {\n            if (!isLoaded) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"general\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  align: \"center\",\n                  children: \"Cargando...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 15\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"general\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"buscador\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    align: \"right\",\n                    onSubmit: this.handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Buscador\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        value: this.state.value,\n                        onChange: this.searchHandler\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      value: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"inicio\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    id: \"titulo-inicio\",\n                    children: \" Better Call Saul\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"temporadas\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \" Temporadas\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 21\n                    }, this), temporadas[1].map(temporada => /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"BB\",\n                      id: temporada,\n                      onClick: this.clickHandler.bind(this, [temporada, 'BCS']),\n                      children: temporada\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 25\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"inicio\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    id: \"titulo-inicio\",\n                    children: \" Breaking Bad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"temporadas\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: \" Temporadas\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 23\n                    }, this), temporadas[0].map(temporada => /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"BB\",\n                      id: temporada,\n                      onClick: this.clickHandler.bind(this, [temporada, 'BB']),\n                      children: temporada\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this);\n            }\n          }\n      }\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elisafernandez/Desktop/tarea1final/src/App.js"],"names":["React","Component","App","constructor","props","state","temporadas","isLoaded","bool_episodes","episodes","episodio","bool_episodio","personaje","bool_personaje","quotes_personaje","value","lista_personaje_state","bool_buscado","contenido","searchHandler","bind","handleSubmit","componentDidMount","fetch","method","then","res","json","resultado_json","temporada_bb","temporada_bcs","episodios_bb","episodios_bcs","i","length","series","push","temporadas_provisoria_bb","season","parseInt","temporadas_provisoria_bcs","temp_bb","temp_bcs","total_temporadas","setState","clickHandler","valor","serie","t","array_titulos","titulo","episodeClicked","characterClicked","nombre","split","string_listo","string_parcial","Promise","all","urlOneData","urlTwoData","target","event","buscado","lista_personajes","console","log","map","resultado","name","preventDefault","render","appearance","better_call_saul_appearance","img","nickname","portrayed","category","status","occupation","trabajos","aparicion","quotes","quote","title","episode","air_date","substr","characters","temporada"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass App extends Component {\n  include\n    constructor(props) {\n        super(props);\n        this.state = {\n                temporadas: [],\n                isLoaded: false,\n                bool_episodes: false,\n                episodes: [],\n                episodio: '',\n                bool_episodio: false,\n                personaje: '',\n                bool_personaje: false,\n                quotes_personaje: '',\n                value: '',\n                lista_personaje_state: [],\n                bool_buscado: false,\n                contenido: 10\n        }\n        this.searchHandler = this.searchHandler.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n\n    componentDidMount() {\n         fetch('https://tarea-1-breaking-bad.herokuapp.com/api/episodes',\n      {\n        method: \"GET\",\n        \n      }\n    )\n        .then(res => res.json())\n        .then(resultado_json => {\n          var temporada_bb = 0;\n          var temporada_bcs = 0;\n          var episodios_bb = [];\n          var episodios_bcs = [];\n         //console.log(`${resultado_json.length}`);\n\n          //recorro todos los episodios obtenidos y separo por serie\n          for (let i=0; i<resultado_json.length; i+=1){\n            \n            //si es que es de Breaking bad lo agrego al array de bb\n            if(resultado_json[i].series =='Breaking Bad'){\n              \n              episodios_bb.push(resultado_json[i]);\n            }\n            //si es que no es de bb, lo agrego al array de bcs\n            else {\n              episodios_bcs.push(resultado_json[i]);}\n          }\n\n          //recorro los episodios de bb y encuentro cuantas temporadas hay\n          for (let i=0; i<episodios_bb.length; i+=1)\n          {\n            var temporadas_provisoria_bb = episodios_bb[i].season;\n            if (parseInt(temporadas_provisoria_bb) > parseInt(temporada_bb)){\n              temporada_bb = temporadas_provisoria_bb;\n            }\n            \n          }\n\n          //recorro los episodios de bcs y encuentro cuantas temporadas hay\n          for (let i=0; i<episodios_bcs.length; i+=1)\n          {\n            var temporadas_provisoria_bcs = episodios_bcs[i].season;\n            if (parseInt(temporadas_provisoria_bcs) > parseInt(temporada_bcs)){\n              temporada_bcs = temporadas_provisoria_bcs;\n            }\n            \n          }\n\n          var temp_bb = [];\n          var temp_bcs = [];\n          //construyo un array con las temporadas de breaking bad\n          for (let i=1; i<=temporada_bb; i+=1){\n            temp_bb.push(i);\n          }\n          //construyo un array con las temporadas de better call saul\n          for (let i=1; i<=temporada_bcs; i+=1){\n            temp_bcs.push(i);\n          }\n          //Construyo un array con todas las temporadas\n          var total_temporadas = [temp_bb, temp_bcs];\n            this.setState({\n                isLoaded: true,\n                temporadas: total_temporadas,\n                bool_buscado: false\n            })\n        });\n    }\n\n    clickHandler(valor){\n\n      //primero distinguir por serie\n      //si es una temporada de Breaking Bad\n      if (valor[1] == 'BCS'){\n        //busco en las temporadas de BB\n        var serie = 'Better+Call+Saul';\n        var t = valor[0]; //TEMPORADA\n      }\n      //si es una temporada de Better Call Saul\n      else{\n        var t = valor[0]; //TEMPORADA\n        var serie = 'Breaking+Bad';\n        //busco en las temporadas de Better Call Saul\n      }\n\n      fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/episodes?series=${serie}`,\n      {\n        method: \"GET\",\n        \n      }\n    ).then(res => res.json())\n    .then(resultado_json => {\n      //defino un array vacio\n      var array_titulos = [];\n      //recorro todos los episodios\n      for (let i=0; i<resultado_json.length; i+=1){\n        //reviso si corresponde a la temporada buscada\n        if (resultado_json[i].season == t ){\n          //guardo el titulo en mi array\n          var titulo = resultado_json[i];\n          array_titulos.push(titulo)\n        }\n        \n      }\n      this.setState({\n        bool_episodes: true,\n        episodes: array_titulos,\n        bool_personaje: false,\n        bool_episodio: false,\n        bool_buscado: false,\n      })\n      \n    });\n    }\n\n    episodeClicked(valor){\n\n      this.setState({\n        bool_episodio: true,\n        episodio: valor,\n        bool_episodes: false,\n        //aca hice un cambio (agregue la linea de abajo)\n        bool_personaje: false,\n        bool_buscado: false,\n      })\n    }\n\n    characterClicked(valor){\n      //console.log(\"aki estoy\")\n      //tengo que buscar toda la informacion sobre el personaje recibido en valor y mostrarla, las temporadas deben ser clickeables\n      var nombre = valor.split(\" \");\n      var string_listo = \"\"\n      for (let i=0; i<nombre.length; i+=1){\n        if (i!=0)\n        {var string_parcial = \"+\"+ nombre[i] }\n        else{var string_parcial = nombre[i]}\n        string_listo =  string_listo + string_parcial\n      }\n      //console.log(string_listo)\n      Promise.all([\n        fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/characters?name=${string_listo}`,\n      {\n        method: \"GET\"\n        \n      }).then(res => res.json()),\n      fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/quote?author=${string_listo}`,\n      {\n        method: \"GET\"\n        \n      }).then(res => res.json())\n      ]).then(([urlOneData, urlTwoData]) => {\n        \n        this.setState({\n            bool_personaje: true,\n            bool_episodio: false,\n            bool_episodes: false,\n            personaje: urlOneData,\n            bool_buscado: false,\n            quotes_personaje:urlTwoData\n        });\n      }) \n    }\n\n    searchHandler(valor) {\n      this.setState({\n        value: valor.target.value});\n    }\n     handleSubmit(event){\n      //busco los personajes de 10 en 10 y voy iterando hasta que los tengo todos\n      var buscado = this.state.value //variable que contiene el texto ingresado en la busqueda\n      \n      \n      var lista_personajes = []\n      for (let i=0; i<10; i+=1)//mientras que las paginas tengan 10 elementos sigo buscando\n        { console.log(\"akiii\")\n          //busco la primera pagina\n          \n          fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/characters?limit=10&offset=${i*10}`,\n      {\n        method: \"GET\"\n        \n      }).then(res => res.json())\n      .then(resultado_json => {\n        if (resultado_json.length > 0){\n          resultado_json.map(resultado => (lista_personajes.push(resultado.name)))\n        }\n        \n        \n        \n        this.setState({\n          //ista_personaje_state: lista_personajes,\n          bool_buscado: true,\n          bool_episodes: false,\n          bool_episodio: false,\n          bool_personaje: false,\n          lista_personaje_state: lista_personajes\n        });\n        \n      })\n      \n          \n        }\n    \n      \n\n      //busco los nombres que contengan el input buscado\n      /*fetch(`https://tarea-1-breaking-bad.herokuapp.com/api/characters?name=${buscado}`,\n      {\n        method: \"GET\"\n        \n      }).then(res => res.json())\n      .then(resultado_json=> {\n        //console.log(resultado_json)\n        var lista_personajes = []\n        resultado_json.map(personaje=> (lista_personajes.push(personaje.name)))\n        this.setState({\n          lista_personaje_state: lista_personajes,\n          bool_buscado: true,\n          bool_episodes: false,\n          bool_episodio: false,\n          bool_personaje: false\n        });\n        \n      })*/\n      \n      //busco a todos los personajes de todas las series y dps entrego una lista con todos los que tienen el texto ingresado.\n      event.preventDefault();\n    }\n\n    render() {\n      \n        var {isLoaded, temporadas, bool_episodes, episodes, episodio, bool_episodio, bool_personaje, personaje, quotes_personaje, lista_personaje_state, bool_buscado} = this.state;\n\n      //si debo mostrar la informacion de un episodio\n      if (bool_buscado){\n        return (\n         <body>\n           <div >\n            <div id=\"buscador\">\n              <form align=\"right\" onSubmit={this.handleSubmit}>\n              <br></br>\n              <br></br>\n                <label > \n                  Buscador\n                  <input type=\"text\" value={this.state.value} onChange = {this.searchHandler}></input>\n                </label>\n                  <input type=\"submit\" value=\"Submit\"></input>\n              </form>\n            </div>\n            <div id=\"inicio\">\n            <h1 id=\"titulo-inicio\">Resultados</h1>\n            <div id=\"episodios\">\n            {lista_personaje_state.map(personaje=>(\n            <ul> \n              <button id=\"btn-personaje\"onClick={this.characterClicked.bind(this, personaje)}>{personaje}</button>\n            </ul>))}\n            </div>\n            \n            </div>\n            \n          </div>\n         </body>\n          \n        )\n      }\n      else {\n        if (bool_personaje){\n          if (personaje[0].appearance.length == 0){\n            personaje[0].appearance = []}\n          if (personaje[0].better_call_saul_appearance.length == 0){personaje[0].better_call_saul_appearance = []}\n          return (\n          <div id=\"general\">\n            <div id=\"buscador\">\n              <form align=\"right\" onSubmit={this.handleSubmit}>\n              <br></br>\n              <br></br>\n                <label > \n                  Buscador\n                  <input type=\"text\" value={this.state.value} onChange = {this.searchHandler}></input>\n                </label>\n                  <input type=\"submit\" value=\"Submit\"></input>\n              </form>\n            </div>\n\n            <div id=\"inicio\">\n              <h1 id=\"titulo-inicio\">{personaje[0].name}</h1><img id=\"imagen\" src={personaje[0].img} width=\"150\" height=\"200\"></img>\n              <h3>Nickname: {personaje[0].nickname}</h3> \n              <h3>Actor: {personaje[0].portrayed}</h3>\n              \n              <h3>Categoría: {personaje[0].category}</h3>\n              <h3>Status: {personaje[0].status}</h3>\n              <h3>Roles:   </h3>\n                {personaje[0].occupation.map(trabajos => (\n                  <li>{trabajos} </li>\n    \n                ))}\n                \n            \n              <h3>Apariciones en Breaking Bad : \n                {personaje[0].appearance.map(aparicion => (\n                  \n                    <button id=\"boton_aparicion\"  onClick={this.clickHandler.bind(this, [aparicion, \"BB\"])}>{aparicion} </button> \n    \n                ))}\n                \n              </h3>\n              <h3>Apariciones en Better Call Saul: \n                {personaje[0].better_call_saul_appearance.map(aparicion => (\n          \n                    <button id=\"boton_aparicion\" onClick={this.clickHandler.bind(this, [aparicion, \"BCS\"])}>{aparicion} </button>\n      \n    \n                ))}\n                \n              </h3>\n              <h3>Quotes:   </h3>\n                {quotes_personaje.map(quotes => (\n                  <li>{quotes.quote} </li>\n    \n                ))}\n  \n            </div>\n            \n          </div>);\n        }\n        if (bool_episodio){\n          return (\n          <div id=\"general\">\n            <div id=\"buscador\">\n                <form align=\"right\" onSubmit={this.handleSubmit}>\n                  <br></br>\n                  <br></br>\n                  <label > \n                    Buscador\n                    <input type=\"text\" value={this.state.value} onChange = {this.searchHandler}></input>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\"></input>\n                  </form>\n              </div>\n\n              <div id=\"inicio\">\n                <h1 id=\"titulo-inicio\">{episodio.title}</h1>\n                <div id=\"episodios\">\n                <h3>Temporada: {episodio.season}</h3>\n                <h3>Episodio: {episodio.episode}</h3>\n                <h3>Fecha de estreno: {episodio.air_date.substr(0, 10)}</h3>\n                <h3>Personajes: \n                  {episodio.characters.map(personaje => (\n                    <ul>\n                      <button id=\"btn-episode\"onClick={this.characterClicked.bind(this, personaje)}>{personaje}</button>\n                    </ul>\n      \n                  ))}\n                </h3>\n                </div>\n                \n              </div>\n            \n          </div>);\n          \n        }\n        else {\n           //si debo mostrar los episodes\n           if (bool_episodes){\n            //aca estoy mostrando los episodes\n            return ( \n            <div id=\"general\"> \n              <div id=\"buscador\">\n                      <form align=\"right\" onSubmit={this.handleSubmit}>\n                      <br></br>\n                      <br></br>\n                        <label > \n                          Buscador\n                          <input type=\"text\" value={this.state.value} onChange = {this.searchHandler}></input>\n                        </label>\n                          <input type=\"submit\" value=\"Submit\"></input>\n                      </form>\n                    </div>\n                    <div id=\"inicio\">\n                      <h1 id=\"titulo-inicio\"> Episodios</h1>\n                      <div id=\"episodios\">\n                        {episodes.map(episodio => ( \n                          \n                          <ul >\n                            <a>{episodio.episode}. </a><button id=\"btn-episode\" onClick={this.episodeClicked.bind(this, episodio)}>{episodio.title}</button>\n                          </ul>))}\n                      </div>\n                      \n                    </div>\n                  \n            </div>);\n            \n          }\n          //si debo mostrar las temporadas\n          else \n          {\n            if (!isLoaded) {\n              return (\n              <div id=\"general\">\n                <br></br>\n                <br></br>\n                <h1 align=\"center\">Cargando...</h1>\n              </div>);\n          }\n            else {\n            \n              return (\n                  <div id=\"general\">\n                    <div id=\"buscador\">\n                      <form align=\"right\" onSubmit={this.handleSubmit}>\n                      <br></br>\n                      <br></br>\n                        <label > \n                          Buscador\n                          <input type=\"text\" value={this.state.value} onChange = {this.searchHandler}></input>\n                        </label>\n                          <input type=\"submit\" value=\"Submit\"></input>\n                      </form>\n                    </div>\n                    \n                    \n                    <div id=\"inicio\">\n                    <h1 id=\"titulo-inicio\"> Better Call Saul</h1>\n                    <div id=\"temporadas\">\n                    <h2> Temporadas</h2>\n                    \n                    {temporadas[1].map(temporada => ( \n                       \n                   \n                        <button className='BB' id={temporada} onClick={this.clickHandler.bind(this,[temporada, 'BCS'])}>{temporada}</button>\n                     ))}\n                    </div>\n                    </div>\n                    \n                    <div id=\"inicio\">\n                    <h1 id=\"titulo-inicio\"> Breaking Bad</h1>\n                    <div id=\"temporadas\">\n                      <h2> Temporadas</h2>\n                      \n                      {temporadas[0].map(temporada => ( \n                        \n                          <button className='BB' id={temporada} onClick={this.clickHandler.bind(this, [temporada, 'BB'])}>{temporada}</button>\n                        ))}   \n                    </div>\n                    </div>\n                    \n                    \n                  </div>\n              \n                  \n              );\n          }\n          \n          }\n        }\n      }\n      \n\n       \n\n        \n    }\n \n    \n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}