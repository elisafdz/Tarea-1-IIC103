{"ast":null,"code":"var _jsxFileName = \"/Users/elisafernandez/tarea1final/src/App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temporadas: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://tarea-1-breaking-bad.herokuapp.com/api/episodes', {\n      method: \"GET\"\n    }).then(res => res.json()).then(resultado_json => {\n      var temporada_bb = 0;\n      var temporada_bcs = 0;\n      var episodios_bb = [];\n      var episodios_bcs = [];\n      console.log(`${resultado_json.length}`); //recorro todos los episodios obtenidos y separo por serie\n\n      for (let a = 0; a < resultado_json.lenght; a += 1) {\n        console.log(\"holaaa\"); //si es que es de Breaking bad lo agrego al array de bb\n\n        if (resultado_json[a].series == 'Breaking Bad') {\n          console.log(\"akiii\");\n          episodios_bb.push(resultado_json[a]);\n        } //si es que no es de bb, lo agrego al array de bcs\n        else {\n            console.log(\"akiii tbnn\");\n            episodios_bcs.push(resultado_json[a]);\n          }\n      } //recorro los episodios de bb y encuentro cuantas temporadas hay\n\n\n      for (let i = 0; i < episodios_bb.length; i += 1) {\n        var temporadas_provisoria_bb = episodios_bb[i].season;\n\n        if (parseInt(temporadas_provisoria_bb) > parseInt(temporada_bb)) {\n          temporada_bb = temporadas_provisoria_bb;\n        }\n      } //recorro los episodios de bcs y encuentro cuantas temporadas hay\n\n\n      for (let i = 0; i < episodios_bcs.length; i += 1) {\n        var temporadas_provisoria_bcs = episodios_bcs[i].season;\n\n        if (parseInt(temporadas_provisoria_bcs) > parseInt(temporada_bcs)) {\n          temporada_bcs = temporadas_provisoria_bcs;\n        }\n      }\n\n      var temp_bb = [];\n      var temp_bcs = []; //construyo un array con las temporadas de breaking bad\n\n      for (let i = 1; i <= temporada_bb; i += 1) {\n        temp_bb.push(i);\n      } //construyo un array con las temporadas de better call saul\n\n\n      for (let i = 1; i <= temporada_bcs; i += 1) {\n        temp_bcs.push(i);\n      } //Construyo un array con todas las temporadas\n\n\n      var total_temporadas = [temp_bb, temp_bcs];\n      this.setState({\n        isLoaded: true,\n        temporadas: total_temporadas\n      });\n    });\n  }\n\n  render() {\n    var {\n      isLoaded,\n      temporadas\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Better Call Saul\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Temporadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this), temporadas[1].map(temporada => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: temporada\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Breaking Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Temporadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this), temporadas[0].map(temporada => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: temporada\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/elisafernandez/tarea1final/src/App.js"],"names":["React","Component","App","constructor","props","state","temporadas","isLoaded","componentDidMount","fetch","method","then","res","json","resultado_json","temporada_bb","temporada_bcs","episodios_bb","episodios_bcs","console","log","length","a","lenght","series","push","i","temporadas_provisoria_bb","season","parseInt","temporadas_provisoria_bcs","temp_bb","temp_bcs","total_temporadas","setState","render","map","temporada"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                temporadas: [],\n                isLoaded: false,\n        }\n    }\n    \n\n    componentDidMount() {\n         fetch('https://tarea-1-breaking-bad.herokuapp.com/api/episodes',\n      {\n        method: \"GET\",\n        \n      }\n    )\n        .then(res => res.json())\n        .then(resultado_json => {\n          var temporada_bb = 0;\n          var temporada_bcs = 0;\n          var episodios_bb = [];\n          var episodios_bcs = [];\n          console.log(`${resultado_json.length}`);\n          //recorro todos los episodios obtenidos y separo por serie\n          for (let a=0; a<resultado_json.lenght; a+=1){\n            console.log(\"holaaa\");\n            //si es que es de Breaking bad lo agrego al array de bb\n            if(resultado_json[a].series == 'Breaking Bad'){\n              console.log(\"akiii\")\n              episodios_bb.push(resultado_json[a]);\n            }\n            //si es que no es de bb, lo agrego al array de bcs\n            else {console.log(\"akiii tbnn\")\n              episodios_bcs.push(resultado_json[a]);}\n          }\n\n          //recorro los episodios de bb y encuentro cuantas temporadas hay\n          for (let i=0; i<episodios_bb.length; i+=1)\n          {\n            var temporadas_provisoria_bb = episodios_bb[i].season;\n            if (parseInt(temporadas_provisoria_bb) > parseInt(temporada_bb)){\n              temporada_bb = temporadas_provisoria_bb;\n            }\n            \n          }\n\n          //recorro los episodios de bcs y encuentro cuantas temporadas hay\n          for (let i=0; i<episodios_bcs.length; i+=1)\n          {\n            var temporadas_provisoria_bcs = episodios_bcs[i].season;\n            if (parseInt(temporadas_provisoria_bcs) > parseInt(temporada_bcs)){\n              temporada_bcs = temporadas_provisoria_bcs;\n            }\n            \n          }\n\n          var temp_bb = [];\n          var temp_bcs = [];\n          //construyo un array con las temporadas de breaking bad\n          for (let i=1; i<=temporada_bb; i+=1){\n            temp_bb.push(i);\n          }\n          //construyo un array con las temporadas de better call saul\n          for (let i=1; i<=temporada_bcs; i+=1){\n            temp_bcs.push(i);\n          }\n          //Construyo un array con todas las temporadas\n          var total_temporadas = [temp_bb, temp_bcs];\n            this.setState({\n                isLoaded: true,\n                temporadas: total_temporadas\n            })\n        });\n    }\n\n    \n\n    render() {\n        var {isLoaded, temporadas} = this.state;\n\n        if (!isLoaded) {\n            return <div> Loading...</div>;\n        }\n        else {\n            return (\n                <div >\n                  <h1> Better Call Saul</h1>\n                  <h2> Temporadas</h2>\n                  \n                    {temporadas[1].map(temporada => ( \n                      <ul >\n                        {temporada}\n                      </ul>))}\n                  <h1> Breaking Bad</h1>\n                  <h2> Temporadas</h2>\n                  \n                    {temporadas[0].map(temporada => ( \n                      <ul >\n                        {temporada}\n                      </ul>))}   \n                </div>\n                \n            );\n        }\n        \n    }\n \n    \n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}